{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(http) {\n    this.http = http;\n    this.API = 'api/weather';\n  }\n  getWeather(city) {\n    return this.http.get(`${this.API}/${city}`);\n  }\n}\n_class = WeatherService;\n_class.ɵfac = function WeatherService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["WeatherService","constructor","http","API","getWeather","city","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Renato\\Desktop\\development\\weather-app\\weather-frontend\\weather-app\\src\\app\\weather\\services\\weather.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Weather } from '../model/weather';\r\nimport { Observable, first, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  private readonly API = 'api/weather';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWeather(city: string): Observable {\r\n    return this.http.get(`${this.API}/${city}`);\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,GAAG,GAAG,aAAa;EAEI;EAExCC,UAAUA,CAACC,IAAY;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,IAAI,CAACH,GAAG,IAAIE,IAAI,EAAE,CAAC;EAC7C;;SARWL,cAAc;;mBAAdA,MAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdV,MAAc;EAAAW,OAAA,EAAdX,MAAc,CAAAY,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}