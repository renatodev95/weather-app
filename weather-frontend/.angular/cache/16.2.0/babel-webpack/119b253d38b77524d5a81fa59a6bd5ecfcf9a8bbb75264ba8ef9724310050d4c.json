{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WeatherComponent = class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.cityName = '';\n    this.weatherData = {\n      cityName: \"City Name\",\n      country: \"Country Name\",\n      description: \"Weather description\",\n      weatherIcon: \"10d\",\n      temp: 25,\n      tempMax: 30,\n      tempMin: 20,\n      feelsLike: 27,\n      humidity: 70,\n      sunrise: \"06:00 AM\",\n      sunset: \"08:00 PM\"\n    };\n  }\n  ngOnInit() {}\n  getWeather(cityName) {\n    this.weatherService.getWeather(cityName).subscribe(data => {\n      this.weatherData = data;\n      console.log(this.weatherData);\n    });\n  }\n};\nWeatherComponent = __decorate([Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})], WeatherComponent);","map":{"version":3,"names":["Component","WeatherComponent","constructor","weatherService","cityName","weatherData","country","description","weatherIcon","temp","tempMax","tempMin","feelsLike","humidity","sunrise","sunset","ngOnInit","getWeather","subscribe","data","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Renato\\Desktop\\development\\weather-app\\weather-frontend\\weather-app\\src\\app\\weather\\weather.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\nimport { Weather } from './model/weather';\n\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\n  cityName: string = '';\n  weatherData: Weather = {\n    cityName: \"City Name\",\n    country: \"Country Name\",\n    description: \"Weather description\",\n    weatherIcon: \"10d\",\n    temp: 25,\n    tempMax: 30,\n    tempMin: 20,\n    feelsLike: 27,\n    humidity: 70,\n    sunrise: \"06:00 AM\",\n    sunset: \"08:00 PM\"\n  };;\n\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit() {\n\n  }\n\n  getWeather(cityName: string) {\n    this.weatherService.getWeather(cityName)\n      .subscribe(data => {\n        this.weatherData = data;\n        console.log(this.weatherData);\n      });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAiB3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAflC,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,WAAW,GAAY;MACrBD,QAAQ,EAAE,WAAW;MACrBE,OAAO,EAAE,cAAc;MACvBC,WAAW,EAAE,qBAAqB;MAClCC,WAAW,EAAE,KAAK;MAClBC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,UAAU;MACnBC,MAAM,EAAE;KACT;EAEqD;EAEtDC,QAAQA,CAAA,GAER;EAEAC,UAAUA,CAACb,QAAgB;IACzB,IAAI,CAACD,cAAc,CAACc,UAAU,CAACb,QAAQ,CAAC,CACrCc,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACd,WAAW,GAAGc,IAAI;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,WAAW,CAAC;IAC/B,CAAC,CAAC;EACN;CAED;AA/BYJ,gBAAgB,GAAAqB,UAAA,EAL5BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWxB,gBAAgB,CA+B5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}