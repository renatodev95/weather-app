{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, ctx_r0.weatherData), \"\\n\");\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.cityName = '';\n  }\n  ngOnInit() {}\n  getWeather(cityName) {\n    this.weatherService.getWeather(cityName).subscribe(data => {\n      this.weatherData = data;\n      console.log(this.weatherData);\n    });\n  }\n  formatJson(jsonObj) {\n    return JSON.stringify(jsonObj, null, 2); // O segundo argumento é o número de espaços de indentação\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"placeholder\", \"CIDADE\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"weather works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"HELLOW\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.cityName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_5_listener() {\n        return ctx.getWeather(ctx.cityName);\n      });\n      i0.ɵɵtext(6, \"BUSCAR\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, WeatherComponent_div_7_Template, 3, 3, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.cityName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ctx_r0","weatherData","WeatherComponent","constructor","weatherService","cityName","ngOnInit","getWeather","subscribe","data","console","log","formatJson","jsonObj","JSON","stringify","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_4_listener","$event","WeatherComponent_Template_button_click_5_listener","ɵɵtemplate","WeatherComponent_div_7_Template","ɵɵproperty"],"sources":["C:\\Users\\Renato\\Desktop\\development\\weather-app\\weather-frontend\\weather-app\\src\\app\\weather\\weather.component.ts","C:\\Users\\Renato\\Desktop\\development\\weather-app\\weather-frontend\\weather-app\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\nimport { Weather } from './model/weather';\n\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\n  cityName: string = '';\n  weatherData!: Weather;\n\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit() {\n\n  }\n\n  getWeather(cityName: string) {\n    this.weatherService.getWeather(cityName)\n      .subscribe(data => {\n        this.weatherData = data;\n        console.log(this.weatherData);\n      });\n  }\n\n  formatJson(jsonObj: any): string {\n    return JSON.stringify(jsonObj, null, 2); // O segundo argumento é o número de espaços de indentação\n  }\n}\n","<p>weather works!</p>\n<h1>HELLOW</h1>\n<input type=\"text\" placeholder=\"CIDADE\" [(ngModel)]=\"cityName\">\n<button (click)=\"getWeather(cityName)\">BUSCAR</button>\n\n<div *ngIf=\"weatherData\">\n  {{ weatherData | json }}\n</div>\n"],"mappings":";;;;;;;ICKAA,EAAA,CAAAC,cAAA,UAAyB;IACvBD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAL,EAAA,CAAAM,WAAA,OAAAC,MAAA,CAAAC,WAAA,QACF;;;ADGA,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAAC,QAAQ,GAAW,EAAE;EAGiC;EAEtDC,QAAQA,CAAA,GAER;EAEAC,UAAUA,CAACF,QAAgB;IACzB,IAAI,CAACD,cAAc,CAACG,UAAU,CAACF,QAAQ,CAAC,CACrCG,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACR,WAAW,GAAGQ,IAAI;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,WAAW,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAW,UAAUA,CAACC,OAAY;IACrB,OAAOC,IAAI,CAACC,SAAS,CAACF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C;;SArBWX,gBAAgB;;mBAAhBA,MAAgB,EAAAT,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAhBhB,MAAgB;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV7BhC,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,qBAAc;MAAAF,EAAA,CAAAG,YAAA,EAAI;MACrBH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACfH,EAAA,CAAAC,cAAA,eAA+D;MAAvBD,EAAA,CAAAkC,UAAA,2BAAAC,yDAAAC,MAAA;QAAA,OAAAH,GAAA,CAAArB,QAAA,GAAAwB,MAAA;MAAA,EAAsB;MAA9DpC,EAAA,CAAAG,YAAA,EAA+D;MAC/DH,EAAA,CAAAC,cAAA,gBAAuC;MAA/BD,EAAA,CAAAkC,UAAA,mBAAAG,kDAAA;QAAA,OAASJ,GAAA,CAAAnB,UAAA,CAAAmB,GAAA,CAAArB,QAAA,CAAoB;MAAA,EAAC;MAACZ,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEtDH,EAAA,CAAAsC,UAAA,IAAAC,+BAAA,iBAEM;;;MALkCvC,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAAwC,UAAA,YAAAP,GAAA,CAAArB,QAAA,CAAsB;MAGxDZ,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAwC,UAAA,SAAAP,GAAA,CAAAzB,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}